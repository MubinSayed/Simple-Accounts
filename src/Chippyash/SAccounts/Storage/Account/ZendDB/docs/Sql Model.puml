@startuml

abstract class StatusTable {
	rowDt: timestamp on update current_timestamp
	rowUid: int unsigned default 0
	rowSts: enum('active','suspended','defunct') default 'active'
	---
}

class sa_org<? extends StatusTable> << (T,red)>> {
	An organisation
	---
	id: int unsigned
	name: varchar(30)
	crcyCode: char(3)
	---
	id: PK
	name: IDX
}

class sa_coa<? extends StatusTable> << (T,red) >> {
	A Chart of Account for an Organisation
	---
	id: int unsigned
	orgId: int unsigned
	name: varchar(20)
	crcyCode: char(3)
	---
	id PK auto
	name IDX
	orgId FK
	crcyCode FK
}

class sa_coa_ledger<? extends StatusTable> << (T,red) >> {
	Chart of Account Structure
	---
	id: int unsigned
	chartId: int unsigned
	nominal: Nominal
	name: varchar(20)
	type: AccountType
	acDr: bigint unsigned
	acCr: bigint unsigned
	---
    id PK auto
	chartId FK
}

class sa_coa_link<? extends StatusTable> << (T,red) >> {
	Graph link backing table for
	sa_coa_ledger
	---
	prnt: int unsigned
	child: int unsigned
	---
	prnt PK
	child PK
	child IDX
	prnt FK
	child FK
}

class sa_coa_graph << (T,lightblue) >> {
	OQ Graph readonly table
	---
	latch: varchar(32),
  	origid bigint unsigned,
  	destid bigint unsigned,
  	weight double,
  	seq bigint unsigned,
  	linkid bigint unsigned
  	---
  	KEY (latch, origid, destid) USING HASH,
  	KEY (latch, destid, origid) USING HASH
  	---
  	ENGINE=OQGRAPH
    data_table='sa_coa_link' origid='prnt' destid='child'
}

class sa_journal<? extends StatusTable> << (T, red) >> {
	Transaction Journal
	---
	id: int unsigned
	chartId: int unsigned
	date: datetime
	note: varchar
	---
	id PK auto
	chartId FK
}

class sa_journal_entry<? extends StatusTable> << (T, red >> {
	A Transaction journal entry
	---
	id: int unsigned
	jrnId: bigint unsigned
	nominal: char(6)
	acDr: bigint unsigned
	acCr: bigint unsigned
	---
	id PK auto
	jrnId FK
	nominal IDX
}

enum AccountType << int >> {
	DUMMY = 0
	REAL = 1
	DR = 3
	ASSET = 11
	BANK = 27
	CUSTOMER = 44
	EXPENSE 77
	CR = 5
	LIABILITY = 133
	INCOME = 389
	EQUITY = 645
	SUPPLIER = 1157
}

class Currency << (D,plum) int >> {
	Integer based currency
	---
	int: int unsigned
	code:char(3)
}
class Nominal << (D,plum) string >> {
	DigitString
	---
	char(6)
}

class "Journal Trigger" << (Í²,blue) >> {
	Triggered when new journal
	entry is made
	---
	updateCoaBalance(orgId, nominal, acDr, acCr)
}

sa_org "(1) id" --{ "(n) orgId" sa_coa
sa_coa "(1) id" --{ "(n) chartId" sa_coa_ledger
sa_coa_ledger "(1) id" --{ "(n) prnt" sa_coa_link
sa_coa_ledger "(1) id" --{ "(n) child" sa_coa_link
sa_coa_link <|.. sa_coa_graph
sa_coa "(1) id" --{ "(n) chartId" sa_journal
sa_journal "(1) id" --{ "(n) jrnId" sa_journal_entry
sa_journal_entry --> "Journal Trigger"
sa_coa_ledger <.. "Journal Trigger"
AccountType <.. sa_coa_ledger
Currency <.. sa_coa_ledger
Nominal <.. sa_coa_ledger
Nominal <.. sa_journal_entry
Currency <.. sa_journal
Currency <.. sa_journal_entry
@enduml